---
- hosts: localhost
  connection: local
  become: yes
  vars:
    the_internet: "0.0.0.0/0"
    var_aws_access_key: "{{ lookup ('env', 'AWS_ACCESS_KEY_ID') }}"
    var_aws_secret_key: "{{ lookup ('env', 'AWS_SECRET_ACCESS_KEY') }}"
    var_VPC: "{{ lookup ('env', 'VPC') }}"
    MY_HOUSE: "{{ lookup ('env', 'MY_HOUSE') }}"
    var_subnet_id: "subnet-07dda32e10a93c6db"

  tasks:
  - name: Create Security Groups
    amazon.aws.ec2_security_group:
      name: demo
      description: Security Demo Group
      vpc_id: '{{ var_VPC }}'
      region: us-east-1
      aws_access_key: '{{ var_aws_access_key}}'
      aws_secret_key: '{{ var_aws_secret_key }}'
      rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: '{{ the_internet }}'
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: '{{ MY_HOUSE }}'
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: '{{ the_internet }}'
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: '172.31.32.77/32'
      

  - name: Create Web Server
    amazon.aws.ec2_instance:
      aws_access_key: '{{ var_aws_access_key }}'
      aws_secret_key: '{{ var_aws_secret_key }}'
      key_name: ansible
      region: us-east-1
      instance_type: t2.micro
      image_id: ami-0557a15b87f6559cf
      security_group: demo
      network:
        assign_public_ip: true
      vpc_subnet_id: '{{ var_subnet_id }}'
      wait: "yes"
      state: running
      count: 1
      tags:
        Name: "webserver"
    register: var_web

  - name: display instances
    debug:
      var: var_web.instances

  - name: display web instance
    debug:
      var: var_web.instances[0].public_dns_name
    
  - name: Adding webserver {{ var_web.instances[0].public_dns_name }} to inventory
    shell: "sed -i '/web/a {{ var_web.instances[0].private_ip_address }}' hosts"


  - name: Modify permissions for key
    ansible.builtin.file:
      path: "./ansible.pem}"
      state: directory
      owner: root
      group: root
      mode: '0400'

  - name: Pause for 0 minutes
    ansible.builtin.pause:
      minutes: 1

